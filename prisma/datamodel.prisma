type User {
  id: ID! @id
  username: String!
  email: String! @unique
  password: String!
  sessions: [Session!]
}

type Guest {
  id: ID! @id
  username: String!
  session: Session
}

type Session {
  id: ID! @id
  publicId: String! @unique
  author: User!
  status: Status @default(value: PENDING)
  questions: [Question!]
  activeQuestion: String
  createdAt: DateTime @createdAt
  updatedAt: DateTime @updatedAt
  guests: [Guest!]
}

enum Status {
  PENDING
  ACTIVE
  PAUSED
  ENDED
}

type Question {
  id: ID! @id
  author: User!
  session: Session
  body: String!
  imageUrls: [String!] @scalarList(strategy: RELATION)
  choices: [Choice!]! @relation(name: "QuestionChoices")
  createdAt: DateTime @createdAt
  updatedAt: DateTime @updatedAt
}

type Choice {
  id: ID! @id
  body: String!
  correct: Boolean @default(value: false)
  chosenBy: [String!] @scalarList(strategy: RELATION)
}
