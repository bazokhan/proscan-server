type Session {
  id: ID!
  publicId: String!
  name: String!
  author: User!
  published: Boolean!
  questions: [Question!]!
  activeQuestion: Question
  results: [SessionResult!]!
}

type SessionResult {
  id: ID!
  questionResults: [QuestionResult!]!
}

input SessionsSelectSet {
  name: String
  authorId: ID
}

input CreateSessionInput {
  name: String!
  authorId: ID!
  questionsId: [ID!]!
  published: Boolean!
}

input UpdateSessionInput {
  id: ID!
  name: String
  questionsId: [ID!]
  published: Boolean
}

type Query {
  sessions(where: SessionsSelectSet): [Session!]!
  session(id: ID!): Session
}

type Mutation {
  createSession(data: CreateSessionInput!): Session
  updateSession(data: UpdateSessionInput!): Session
  deleteSession(id: ID!): Session
}
